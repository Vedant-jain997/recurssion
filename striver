Q.reverse an array using recurrsion 
#include<iostream>
#include<algorithm>
#include<string>
using namespace std;
void rev(int arr[],int n,int h){
  if(h>n){
    return;
  }
 swap(arr[n],arr[h]);
 rev(arr,n-1,h+1);

}
int main(){
int arr[]={1,2,3,4,2};
 rev(arr,4,0);
 for(int i=0;i<5;i++){
  cout<<arr[i]<<" ";
 }
   return  0;
}
 -> another approach O(n)is smaller
 #include<iostream>
#include<algorithm>
#include<string>
using namespace std;
void rev(int arr[],int n,int i){
  if(i>=n/2){
    return;
  }
 swap(arr[i],arr[n-i-1]);
 rev(arr,n,i+1);

}
int main(){
int arr[]={1,2,3,4,2};
 rev(arr,5,0);
 for(int i=0;i<5;i++){
  cout<<arr[i]<<" ";
 }
   return  0;
}

q.2 check if string is palindrome
#include<iostream>
#include<algorithm>
#include<string>
using namespace std;
bool f(string str,int i ,int n){
  if(i>=n/2){
    return true;
  }
  
  if(str[i]!=str[n-i-1]){
   return false;
  }
   return f(str,i+1,n);
}
int main(){
string str="noon";
cout<<f(str,0,4)<<" string is palindrome sequence"<<endl;
   return  0;
}
 
 
